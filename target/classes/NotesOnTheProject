CSR layers system is being used.
C - Controller layer	deals with the client
S - Service layer		deals with the business logic
R - Repository layer	connects with the DB.

*Implementation layer - Part of the service layer. Implements the service interfaces.
*Repository layer consists of Entity package
	1. It contains class that can be mapped to to Tables in the DB.
	2. Therefore the entity objects will be mapped.

Factory design patter is used in the service layer.
	1. Interfaces are created for features.
	2. Implementation classes are for actual logic.
	3. This is done so that in future multiple implementation classes can be created for
		same interface.
		
/**
	 * PUT is a combination of POST and GET - Data can be sent by client in the form of parameters
	 * in the URL, and also in the URL-Body (JSON format).
	 * 
	 * POST - used to creat new resource in the server.
	 * PUT - Used for Updation of existing records. (Mnemonic - pUt has u - update) Like update entire
	 * 		employee record.
	 * PATCH - also used for update, but only small requests. Like only employee name.
	 * 			It is a 'partial update method.'
	 * DELETE - to delete an existing resource in the server.
	 * 
	 *  
	 */
	 
	 
	 /***
	 * Both the above methods can be used in a combination.
	 * PathVariable method or RequestParam method. (Both use GET method of the http request)
	 * 
	 * The problem is
	 * 1. Form multiple variables, above two methods, the url will be extremely lengthy.
	 * 3. the URL has a limit to its length - it may get cut short and the values may get lost.
	 * 2. The values are visible in the url, not good for security reasons.
	 * 
	 * 
	 * Another better way to get data - use POST request of the URL. It will use the DTO class
	 * of the calculator to map the data from the client (Browser).
	 * In POST mapping -
	 * 1. the client will send the data in JSON (key:value) format, rather than as a part of the URL.
	 * 1A. The data is passed in the http body rather than in http address.
	 * 2. The key must match with the variable name of the DTO object.
	 * 3. A browser can send only GET request. Hence we need Postman to sent POST request.
	 * 4. Since POST is used to create a record, the default HttpResponse (i.e 200 OK) must be change to CREATED
	 * 		This is important because:
	 * 			1. the client will receive data (multiplication result here)
	 * 			2. As well as proper status report. 
	 * 		This can be done by following example.
	 * 		
	 * 
	 */
	
	
	//Getting parameters using request param.
	//http://localhost:8080/api/v1/calculator/add?num1=3.5&num2=6.5
 